// Sam Boerlijst 25-10-2022
// Timed control of heaters with relayboard and DS18B20
// Current setup uses two NO relays and two sensors per group with an interval of 15 minutes#include <OneWire.h>#include <DallasTemperature.h>#include <avr/pgmspace.h>//define connected datapins of the sensors#define ONE_WIRE_BUS1 8#define ONE_WIRE_BUS2 9#define ONE_WIRE_BUS3 10#define ONE_WIRE_BUS4 11//define sensor instancesOneWire oneWire1(ONE_WIRE_BUS1);OneWire oneWire2(ONE_WIRE_BUS2);OneWire oneWire3(ONE_WIRE_BUS3);OneWire oneWire4(ONE_WIRE_BUS4);// Pass the instances to DallasTemperature library:DallasTemperature sensor1(&oneWire1);DallasTemperature sensor2(&oneWire2);DallasTemperature sensor3(&oneWire3);DallasTemperature sensor4(&oneWire4);//set relayconst int RELAY_PIN1 = 3;const int RELAY_PIN2 = 4;float Temp1;float Temp2;float T1;float T2;float T3;float T4;//define array with temperature//PROGMEM const float Str1[] = //{17.2,17.2,17.2,17.2,17.2,17.2,17.2,17.1,17.1,17.1,17.1,17.1,17.1,17.1,17.0,17.0,17.0,17.0,17.0,17.0,17.0,16.9,16.9,16.9,16.9,16.9,16.9,16.9,16.8,16.8,16.8,16.8,16.8,16.8,16.8,16.7,16.7,16.7,16.7,16.7,16.7,16.7,16.6,16.6,16.6,16.6,16.6,16.6,16.6,16.6,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.4,16.4,16.4,16.4,16.4,16.4,16.4,16.3,16.3,16.3,16.3,16.3,16.3,16.3,16.3,16.2,16.2,16.2,16.2,16.2,16.2,16.2,16.1,16.1,16.1,16.1,16.1,16.1,16.1,16.1,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,15.9,15.9,15.9,15.9,15.9,15.9,15.9,15.9,15.8,15.8,15.8,15.8,15.8,15.8,15.8,15.8,15.8,15.7,15.7,15.7,15.7,15.7,15.7,15.7,15.7,15.7,15.6,15.6,15.6,15.6,15.6,15.6,15.6,15.6,15.6,15.5,15.5,15.5,15.5,15.5,15.5,15.5,15.5,15.5,15.5,15.4,15.4,15.4,15.4,15.4,15.4,15.4,15.4,15.4,15.4,15.3,15.3,15.3,15.3,15.3,15.3,15.3,15.3,15.3,15.3,15.3,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.1,15.1,15.1,15.1,15.1,15.1,15.1,15.1,15.1,15.1,15.1,15.1,15.1,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.1,15.1,15.1,15.1,15.1,15.1,15.2,15.2,15.2,15.2,15.2,15.2,15.3,15.3,15.3,15.3,15.3,15.4,15.4,15.4,15.4,15.5,15.5,15.5,15.5,15.5,15.6,15.6,15.6,15.6,15.7,15.7,15.7,15.7,15.8,15.8,15.8,15.8,15.9,15.9,15.9,15.9,16.0,16.0,16.0,16.0,16.1,16.1,16.1,16.2,16.2,16.2,16.2,16.3,16.3,16.3,16.4,16.4,16.4,16.4,16.5,16.5,16.5,16.6,16.6,16.6,16.7,16.7,16.7,16.7,16.8,16.8,16.8,16.9,16.9,16.9,17.0,17.0,17.0,17.1,17.1,17.1,17.1,17.2,17.2,17.2,17.3,17.3,17.3,17.3,17.4,17.4,17.4,17.5,17.5,17.5,17.5,17.6,17.6,17.6,17.7,17.7,17.7,17.8,17.8,17.8,17.9,17.9,17.9,17.9,18.0,18.0,18.0,18.1,18.1,18.1,18.2,18.2,18.2,18.2,18.3,18.3,18.3,18.4,18.4,18.4,18.4,18.5,18.5,18.5,18.6,18.6,18.6,18.6,18.7,18.7,18.7,18.7,18.8,18.8,18.8,18.8,18.9,18.9,18.9,18.9,19.0,19.0,19.0,19.0,19.0,19.1,19.1,19.1,19.1,19.2,19.2,19.2,19.2,19.2,19.3,19.3,19.3,19.3,19.3,19.3,19.4,19.4,19.4,19.4,19.4,19.4,19.5,19.5,19.5,19.5,19.5,19.5,19.5,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.5,19.5,19.5,19.5,19.5,19.5,19.5,19.5,19.5,19.5,19.4,19.4,19.4,19.4,19.4,19.4,19.4,19.4,19.4,19.3,19.3,19.3,19.3,19.3,19.3,19.3,19.3,19.2,19.2,19.2,19.2,19.2,19.2,19.2,19.1,19.1,19.1,19.1,19.1,19.1,19.1,19.0,19.0,19.0,19.0,19.0,19.0,19.0,18.9,18.9,18.9,18.9,18.9,18.9,18.8,18.8,18.8,18.8,18.8,18.8,18.7,18.7,18.7,18.7,18.7,18.6,18.6,18.6,18.6,18.6,18.6,18.5,18.5,18.5,18.5,18.5,18.4,18.4,18.4,18.4,18.4,18.4,18.3,18.3,18.3,18.3,18.3,18.2,18.2,18.2,18.2,18.2,18.1,18.1,18.1,18.1,18.1,18.0,18.0,18.0,18.0,18.0,17.9,17.9,17.9,17.9,17.9,17.8,17.8,17.8,17.8,17.7,17.7,17.7,17.7,17.7,17.6,17.6,17.6,17.6,17.6,17.5,17.5,17.5,17.5,17.5,17.4,17.4,17.4,17.4,17.3,17.3,17.3,17.3,17.3,17.2,17.2};//PROGMEM const float Str2[] = //{17.4,17.4,17.4,17.3,17.3,17.3,17.3,17.2,17.2,17.2,17.1,17.1,17.1,17.1,17.0,17.0,17.0,16.9,16.9,16.9,16.9,16.8,16.8,16.8,16.7,16.7,16.7,16.7,16.6,16.6,16.6,16.5,16.5,16.5,16.5,16.4,16.4,16.4,16.3,16.3,16.3,16.3,16.2,16.2,16.2,16.1,16.1,16.1,16.1,16.0,16.0,16.0,16.0,15.9,15.9,15.9,15.8,15.8,15.8,15.8,15.7,15.7,15.7,15.7,15.6,15.6,15.6,15.5,15.5,15.5,15.5,15.4,15.4,15.4,15.4,15.3,15.3,15.3,15.3,15.2,15.2,15.2,15.2,15.1,15.1,15.1,15.1,15.0,15.0,15.0,15.0,14.9,14.9,14.9,14.9,14.8,14.8,14.8,14.8,14.7,14.7,14.7,14.7,14.6,14.6,14.6,14.6,14.5,14.5,14.5,14.5,14.4,14.4,14.4,14.4,14.4,14.3,14.3,14.3,14.3,14.2,14.2,14.2,14.2,14.2,14.1,14.1,14.1,14.1,14.0,14.0,14.0,14.0,14.0,13.9,13.9,13.9,13.9,13.9,13.8,13.8,13.8,13.8,13.8,13.7,13.7,13.7,13.7,13.7,13.6,13.6,13.6,13.6,13.6,13.6,13.5,13.5,13.5,13.5,13.5,13.4,13.4,13.4,13.4,13.4,13.4,13.3,13.3,13.3,13.3,13.3,13.3,13.2,13.2,13.2,13.2,13.2,13.2,13.2,13.1,13.1,13.1,13.1,13.1,13.1,13.1,13.0,13.0,13.0,13.0,13.0,13.0,13.0,12.9,12.9,12.9,12.9,12.9,12.9,12.9,12.9,12.8,12.8,12.8,12.8,12.8,12.8,12.8,12.8,12.8,12.7,12.7,12.7,12.7,12.7,12.7,12.7,12.7,12.7,12.7,12.7,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.6,12.6,12.6,12.6,12.6,12.6,12.7,12.7,12.7,12.7,12.7,12.8,12.8,12.8,12.8,12.9,12.9,12.9,12.9,13.0,13.0,13.0,13.1,13.1,13.1,13.2,13.2,13.2,13.3,13.3,13.3,13.4,13.4,13.4,13.5,13.5,13.5,13.6,13.6,13.7,13.7,13.8,13.8,13.8,13.9,13.9,14.0,14.0,14.1,14.1,14.2,14.2,14.3,14.3,14.3,14.4,14.4,14.5,14.6,14.6,14.7,14.7,14.8,14.8,14.9,14.9,15.0,15.0,15.1,15.1,15.2,15.2,15.3,15.4,15.4,15.5,15.5,15.6,15.6,15.7,15.8,15.8,15.9,15.9,16.0,16.1,16.1,16.2,16.2,16.3,16.4,16.4,16.5,16.6,16.6,16.7,16.7,16.8,16.9,16.9,17.0,17.0,17.1,17.2,17.2,17.3,17.4,17.4,17.5,17.5,17.5,17.6,17.7,17.7,17.8,17.8,17.9,18.0,18.0,18.1,18.2,18.2,18.3,18.3,18.4,18.5,18.5,18.6,18.6,18.7,18.8,18.8,18.9,19.0,19.0,19.1,19.1,19.2,19.2,19.3,19.4,19.4,19.5,19.5,19.6,19.7,19.7,19.8,19.8,19.9,19.9,20.0,20.0,20.1,20.2,20.2,20.3,20.3,20.4,20.4,20.5,20.5,20.6,20.6,20.7,20.7,20.8,20.8,20.9,20.9,20.9,21.0,21.0,21.1,21.1,21.2,21.2,21.2,21.3,21.3,21.4,21.4,21.4,21.5,21.5,21.6,21.6,21.6,21.7,21.7,21.7,21.8,21.8,21.8,21.9,21.9,21.9,22.0,22.0,22.0,22.0,22.1,22.1,22.1,22.1,22.2,22.2,22.2,22.2,22.2,22.3,22.3,22.3,22.3,22.3,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.3,22.3,22.3,22.3,22.3,22.3,22.3,22.3,22.2,22.2,22.2,22.2,22.2,22.2,22.2,22.1,22.1,22.1,22.1,22.1,22.1,22.0,22.0,22.0,22.0,22.0,22.0,21.9,21.9,21.9,21.9,21.8,21.8,21.8,21.8,21.8,21.7,21.7,21.7,21.7,21.6,21.6,21.6,21.6,21.6,21.5,21.5,21.5,21.4,21.4,21.4,21.4,21.3,21.3,21.3,21.3,21.2,21.2,21.2,21.1,21.1,21.1,21.1,21.0,21.0,21.0,20.9,20.9,20.9,20.8,20.8,20.8,20.7,20.7,20.7,20.6,20.6,20.6,20.5,20.5,20.5,20.4,20.4,20.4,20.3,20.3,20.3,20.2,20.2,20.2,20.1,20.1,20.1,20.0,20.0,19.9,19.9,19.9,19.8,19.8,19.8,19.7,19.7,19.6,19.6,19.6,19.5,19.5,19.5,19.4,19.4,19.3,19.3,19.3,19.2,19.2,19.1,19.1,19.1,19.0,19.0,18.9,18.9,18.9,18.8,18.8,18.7,18.7,18.6,18.6,18.6,18.5,18.5,18.4,18.4,18.4,18.3,18.3,18.2,18.2,18.1,18.1,18.1,18.0,18.0,17.9,17.9,17.8,17.8,17.8,17.7,17.7,17.6,17.6,17.5,17.5,17.5,17.4,17.4};

PROGMEM const float Str1.1[] = {17.2,17.2,17.2,17.2,17.2,17.2,17.2,17.1,17.1,17.1,17.1,17.1,17.1,17.1,17.0,17.0,17.0,17.0,17.0,17.0,17.0,16.9,16.9,16.9,16.9,16.9,16.9,16.9,16.8,16.8,16.8,16.8,16.8,16.8,16.8,16.7,16.7,16.7,16.7,16.7,16.7,16.7,16.6,16.6,16.6,16.6,16.6,16.6,16.6,16.6,16.5,16.5,16.5,16.5,16.5,16.5,16.5,16.4,16.4,16.4,16.4,16.4,16.4,16.4,16.3,16.3,16.3,16.3,16.3,16.3,16.3,16.3,16.2,16.2,16.2,16.2,16.2,16.2,16.2,16.1,16.1,16.1,16.1,16.1,16.1,16.1,16.1,16.0,16.0,16.0,};

PROGMEM const float Str1.2[] = {16.0,16.0,16.0,16.0,16.0,15.9,15.9,15.9,15.9,15.9,15.9,15.9,15.9,15.8,15.8,15.8,15.8,15.8,15.8,15.8,15.8,15.8,15.7,15.7,15.7,15.7,15.7,15.7,15.7,15.7,15.7,15.6,15.6,15.6,15.6,15.6,15.6,15.6,15.6,15.6,15.5,15.5,15.5,15.5,15.5,15.5,15.5,15.5,15.5,15.5,15.4,15.4,15.4,15.4,15.4,15.4,15.4,15.4,15.4,15.4,15.3,15.3,15.3,15.3,15.3,15.3,15.3,15.3,15.3,15.3,15.3,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.2,15.1,15.1,15.1,15.1,15.1,15.1,15.1,};

PROGMEM const float Str1.3[] = {15.1,15.1,15.1,15.1,15.1,15.1,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,};

PROGMEM const float Str1.4[] = {14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.7,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.8,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,14.9,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.1,15.1,15.1,15.1,15.1,15.1,15.2,15.2,15.2,15.2,15.2,15.2,15.3,15.3,15.3,15.3,15.3,15.4,15.4,15.4,15.4,15.5,15.5,15.5,15.5,15.5,15.6,15.6,15.6,15.6,15.7,15.7,15.7,15.7,15.8,15.8,15.8,15.8,15.9,15.9,15.9,15.9,16.0,};

PROGMEM const float Str1.5[] = {16.0,16.0,16.0,16.1,16.1,16.1,16.2,16.2,16.2,16.2,16.3,16.3,16.3,16.4,16.4,16.4,16.4,16.5,16.5,16.5,16.6,16.6,16.6,16.7,16.7,16.7,16.7,16.8,16.8,16.8,16.9,16.9,16.9,17.0,17.0,17.0,17.1,17.1,17.1,17.1,17.2,17.2,17.2,17.3,17.3,17.3,17.3,17.4,17.4,17.4,17.5,17.5,17.5,17.5,17.6,17.6,17.6,17.7,17.7,17.7,17.8,17.8,17.8,17.9,17.9,17.9,17.9,18.0,18.0,18.0,18.1,18.1,18.1,18.2,18.2,18.2,18.2,18.3,18.3,18.3,18.4,18.4,18.4,18.4,18.5,18.5,18.5,18.6,18.6,18.6,};

PROGMEM const float Str1.6[] = {18.6,18.7,18.7,18.7,18.7,18.8,18.8,18.8,18.8,18.9,18.9,18.9,18.9,19.0,19.0,19.0,19.0,19.0,19.1,19.1,19.1,19.1,19.2,19.2,19.2,19.2,19.2,19.3,19.3,19.3,19.3,19.3,19.3,19.4,19.4,19.4,19.4,19.4,19.4,19.5,19.5,19.5,19.5,19.5,19.5,19.5,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,};

PROGMEM const float Str1.7[] = {19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.8,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.7,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.6,19.5,19.5,19.5,19.5,19.5,19.5,19.5,19.5,19.5,19.5,19.4,19.4,19.4,19.4,19.4,19.4,19.4,19.4,19.4,19.3,19.3,19.3,19.3,19.3,19.3,19.3,19.3,19.2,19.2,19.2,19.2,19.2,19.2,19.2,19.1,19.1,19.1,19.1,19.1,19.1,19.1,19.0,19.0,19.0,19.0,19.0,19.0,};

PROGMEM const float Str1.8[] = {19.0,18.9,18.9,18.9,18.9,18.9,18.9,18.8,18.8,18.8,18.8,18.8,18.8,18.7,18.7,18.7,18.7,18.7,18.6,18.6,18.6,18.6,18.6,18.6,18.5,18.5,18.5,18.5,18.5,18.4,18.4,18.4,18.4,18.4,18.4,18.3,18.3,18.3,18.3,18.3,18.2,18.2,18.2,18.2,18.2,18.1,18.1,18.1,18.1,18.1,18.0,18.0,18.0,18.0,18.0,17.9,17.9,17.9,17.9,17.9,17.8,17.8,17.8,17.8,17.7,17.7,17.7,17.7,17.7,17.6,17.6,17.6,17.6,17.6,17.5,17.5,17.5,17.5,17.5,17.4,17.4,17.4,17.4,17.3,17.3,17.3,17.3,17.3,17.2,17.2};

PROGMEM const float Str2.1[] = {17.4,17.4,17.4,17.3,17.3,17.3,17.3,17.2,17.2,17.2,17.1,17.1,17.1,17.1,17.0,17.0,17.0,16.9,16.9,16.9,16.9,16.8,16.8,16.8,16.7,16.7,16.7,16.7,16.6,16.6,16.6,16.5,16.5,16.5,16.5,16.4,16.4,16.4,16.3,16.3,16.3,16.3,16.2,16.2,16.2,16.1,16.1,16.1,16.1,16.0,16.0,16.0,16.0,15.9,15.9,15.9,15.8,15.8,15.8,15.8,15.7,15.7,15.7,15.7,15.6,15.6,15.6,15.5,15.5,15.5,15.5,15.4,15.4,15.4,15.4,15.3,15.3,15.3,15.3,15.2,15.2,15.2,15.2,15.1,15.1,15.1,15.1,15.0,15.0,15.0,};

PROGMEM const float Str2.2[] = {15.0,14.9,14.9,14.9,14.9,14.8,14.8,14.8,14.8,14.7,14.7,14.7,14.7,14.6,14.6,14.6,14.6,14.5,14.5,14.5,14.5,14.4,14.4,14.4,14.4,14.4,14.3,14.3,14.3,14.3,14.2,14.2,14.2,14.2,14.2,14.1,14.1,14.1,14.1,14.0,14.0,14.0,14.0,14.0,13.9,13.9,13.9,13.9,13.9,13.8,13.8,13.8,13.8,13.8,13.7,13.7,13.7,13.7,13.7,13.6,13.6,13.6,13.6,13.6,13.6,13.5,13.5,13.5,13.5,13.5,13.4,13.4,13.4,13.4,13.4,13.4,13.3,13.3,13.3,13.3,13.3,13.3,13.2,13.2,13.2,13.2,13.2,13.2,13.2,13.1,};

PROGMEM const float Str2.3[] = {13.1,13.1,13.1,13.1,13.1,13.1,13.0,13.0,13.0,13.0,13.0,13.0,13.0,12.9,12.9,12.9,12.9,12.9,12.9,12.9,12.9,12.8,12.8,12.8,12.8,12.8,12.8,12.8,12.8,12.8,12.7,12.7,12.7,12.7,12.7,12.7,12.7,12.7,12.7,12.7,12.7,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.6,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,};

PROGMEM const float Str2.3[] = {12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.4,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.5,12.6,12.6,12.6,12.6,12.6,12.6,12.7,12.7,12.7,12.7,12.7,12.8,12.8,12.8,12.8,12.9,12.9,12.9,12.9,13.0,13.0,13.0,13.1,13.1,13.1,13.2,13.2,13.2,13.3,13.3,13.3,13.4,13.4,13.4,13.5,13.5,13.5,13.6,13.6,13.7,13.7,13.8,13.8,13.8,13.9,13.9,14.0,14.0,14.1,14.1,14.2,14.2,14.3,14.3,14.3,14.4,14.4,14.5,14.6,14.6,14.7,14.7,14.8,14.8,14.9,};

PROGMEM const float Str2.5[] = {14.9,15.0,15.0,15.1,15.1,15.2,15.2,15.3,15.4,15.4,15.5,15.5,15.6,15.6,15.7,15.8,15.8,15.9,15.9,16.0,16.1,16.1,16.2,16.2,16.3,16.4,16.4,16.5,16.6,16.6,16.7,16.7,16.8,16.9,16.9,17.0,17.0,17.1,17.2,17.2,17.3,17.4,17.4,17.5,17.5,17.5,17.6,17.7,17.7,17.8,17.8,17.9,18.0,18.0,18.1,18.2,18.2,18.3,18.3,18.4,18.5,18.5,18.6,18.6,18.7,18.8,18.8,18.9,19.0,19.0,19.1,19.1,19.2,19.2,19.3,19.4,19.4,19.5,19.5,19.6,19.7,19.7,19.8,19.8,19.9,19.9,20.0,20.0,20.1,20.2,};

PROGMEM const float Str2.6[] = {20.2,20.3,20.3,20.4,20.4,20.5,20.5,20.6,20.6,20.7,20.7,20.8,20.8,20.9,20.9,20.9,21.0,21.0,21.1,21.1,21.2,21.2,21.2,21.3,21.3,21.4,21.4,21.4,21.5,21.5,21.6,21.6,21.6,21.7,21.7,21.7,21.8,21.8,21.8,21.9,21.9,21.9,22.0,22.0,22.0,22.0,22.1,22.1,22.1,22.1,22.2,22.2,22.2,22.2,22.2,22.3,22.3,22.3,22.3,22.3,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,};

PROGMEM const float Str2.7[] = {22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.5,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.4,22.3,22.3,22.3,22.3,22.3,22.3,22.3,22.3,22.2,22.2,22.2,22.2,22.2,22.2,22.2,22.1,22.1,22.1,22.1,22.1,22.1,22.0,22.0,22.0,22.0,22.0,22.0,21.9,21.9,21.9,21.9,21.8,21.8,21.8,21.8,21.8,21.7,21.7,21.7,21.7,21.6,21.6,21.6,21.6,21.6,21.5,21.5,21.5,21.4,21.4,21.4,21.4,21.3,21.3,21.3,21.3,21.2,21.2,21.2,21.1,21.1,21.1,21.1,21.0,21.0,21.0,20.9,20.9,20.9,};

PROGMEM const float Str2.8[] = {20.8,20.8,20.8,20.7,20.7,20.7,20.6,20.6,20.6,20.5,20.5,20.5,20.4,20.4,20.4,20.3,20.3,20.3,20.2,20.2,20.2,20.1,20.1,20.1,20.0,20.0,19.9,19.9,19.9,19.8,19.8,19.8,19.7,19.7,19.6,19.6,19.6,19.5,19.5,19.5,19.4,19.4,19.3,19.3,19.3,19.2,19.2,19.1,19.1,19.1,19.0,19.0,18.9,18.9,18.9,18.8,18.8,18.7,18.7,18.6,18.6,18.6,18.5,18.5,18.4,18.4,18.4,18.3,18.3,18.2,18.2,18.1,18.1,18.1,18.0,18.0,17.9,17.9,17.8,17.8,17.8,17.7,17.7,17.6,17.6,17.5,17.5,17.5,17.4,17.4};

 

//define current counter/time and intervalint Counter = 0;long interval = 2000;unsigned long previousMillis=0;void setup() {  //print counter state  Serial.println(Counter);     // Start serial monitor for diagnostics and start sensors  Serial.begin(9600);  sensor1.begin(); sensor2.begin(); sensor3.begin();    //define relay as output  pinMode(RELAY_PIN1, OUTPUT);  pinMode(RELAY_PIN2, OUTPUT);  //start with relay off  digitalWrite(RELAY_PIN1, HIGH);  digitalWrite(RELAY_PIN2, HIGH);//first round  sensor1.requestTemperatures(); sensor2.requestTemperatures(); sensor3.requestTemperatures(); sensor4.requestTemperatures(); // request curren temperature    T1 = sensor1.getTempCByIndex(0); T2 = sensor2.getTempCByIndex(0); T3 = sensor3.getTempCByIndex(0); T4 = sensor4.getTempCByIndex(0); //write temperature to variables    Temp1 = Str1[Counter];    Temp2 = Str2[Counter];        if(((T1+T2)/2)<Temp1){      //Turn relay1 on if mean T1&T2 is lower than Temp1        digitalWrite(RELAY_PIN1, LOW);      }    else if(((T1+T2)/2)>=Temp1){      //Turn relay 1 off if temp is reached or overshot      digitalWrite(RELAY_PIN1, HIGH);    }    if(((T3+T4)/2)<Temp2){      //Turn relay1 on if mean T3&T4 is lower than Temp1      digitalWrite(RELAY_PIN2, LOW);      }    else if(((T3+T4)/2)>=Temp2){      //Turn relay 1 off if temp is reached or overshot      digitalWrite(RELAY_PIN2, HIGH);    }    //print values to serial monitor    printStats();  }//Start loop to check and compare temperaturesvoid loop() {  unsigned long currentMillis = millis(); //get snapshot of current time    if ((unsigned long)(currentMillis - previousMillis) >= interval){    sensor1.requestTemperatures(); sensor2.requestTemperatures(); sensor3.requestTemperatures(); sensor4.requestTemperatures(); // request curren temperature    T1 = sensor1.getTempCByIndex(0); T2 = sensor2.getTempCByIndex(0); T3 = sensor3.getTempCByIndex(0); T4 = sensor4.getTempCByIndex(0); //write temperature to variables    Jump();if(Counter<=90){   

Temp1 = Str1.1[Counter];Temp2 = Str2.1[Counter]; }

if(Counter<=180){   

Temp1 = Str1.2[Counter-90];Temp2 = Str2.2[Counter-90]; }

if(Counter<=270){   

Temp1 = Str1.3[Counter-270];Temp2 = Str2.3[Counter-270]; }

if(Counter<=360){   

Temp1 = Str1.4[Counter-360];Temp2 = Str2.4[Counter-360]; }

if(Counter<=450){   

Temp1 = Str1.5[Counter-450];Temp2 = Str2.5[Counter-450]; }

if(Counter<=540){   

Temp1 = Str1.6[Counter-540];Temp2 = Str2.6[Counter-540]; }

if(Counter<=630){   

Temp1 = Str1.7[Counter-630];Temp2 = Str2.7[Counter-630]; }

if(Counter<=720){   

Temp1 = Str1.8[Counter-720];Temp2 = Str2.8[Counter-720]; }    if(((T1+T2)/2)<Temp1){      //Turn relay1 on if mean T1&T2 is lower than Temp1        digitalWrite(RELAY_PIN1, LOW);      }    else if(((T1+T2)/2)>=Temp1){      //Turn relay 1 off if temp is reached or overshot      digitalWrite(RELAY_PIN1, HIGH);    }    if(((T3+T4)/2)<Temp2){      //Turn relay1 on if mean T3&T4 is lower than Temp1      digitalWrite(RELAY_PIN2, LOW);      }    else if(((T3+T4)/2)>=Temp2){      //Turn relay 1 off if temp is reached or overshot      digitalWrite(RELAY_PIN2, HIGH);    }    //print values to serial monitor    printStats();    previousMillis = currentMillis; // set snapshot as offset to track time until next event  }}void Jump(){  if (Counter<720){  Counter = Counter+1;  }  else {    Counter = 0;    }  }void printStats(){  Serial.print("Current quartile = "); Serial.print(Counter); Serial.print("\t"); Serial.print("Group 1 heating to = "); Serial.print(Temp1); Serial.print("\t"); Serial.print("Group 2 heating to = "); Serial.println(Temp2);  Serial.print("T1 = "); Serial.print(T1); Serial.print("\t"); Serial.print("T2 = "); Serial.print(T2); Serial.print("\t"); Serial.print("T3 = "); Serial.print(T3); Serial.print("\t"); Serial.print("T4 = "); Serial.println(T4);  }
